 ### THIS IS A BASH SCRIPT AND WILL NOT RUN ON ANY EMULATOR###

 This is the script we attempted to run to get code coverage testing for our flutter app.
Our tester  in charge of generating code coverage only had access to an old(2014, 4 years before
flutter was released) ubuntu  terminal (tester uses windows) that was not compatible with some
of the tools used here. The tester could not update the environment as it is managed by UW.

after talking with the other team that used flutter, we discovered that the code coverage tool
available to us would not test UI components, which is what a majority of our code base is. This
script is included in our project as proof that we went out of our way to try to get comprehensive
testing done

#!/usr/bin/env bash

red=$(tput setaf 1)
none=$(tput sgr0)

show_help() {
    printf "usage: $0 [--help] [--report] [--test] [<path to package>]
Script for running all unit and widget tests with code coverage.
(run from root of repo)
where:
    <path to package>
        runs all tests with coverage and reports
    -t, --test
        runs all tests with coverage, but no report
    -r, --report
        generate a coverage report
        (requires lcov, install with Homebrew)
    -h, --help
        print this message
"
}

run_tests() {
    if [[ -f "pubspec.yaml" ]]; then
        rm -f coverage/lcov.info
        rm -f coverage/lcov-final.info
        flutter test --coverage
    else
        printf "\n${red}Error: this is not a Flutter project${none}"
        exit 1
    fi
}

run_report() {
    if [[ -f "coverage/lcov.info" ]]; then
        lcov -r coverage/lcov.info lib/resources/l10n/\* lib/\*/fake_\*.dart \
             -o coverage/lcov-final.info
        genhtml -o coverage coverage/lcov-final.info
        open coverage/index-sort-l.html
    else
        printf "\n${red}Error: no coverage info was generated${none}"
        exit 1
    fi
}

case $1 in
    -h|--help)
        show_help
        ;;
    -t|--test)
        run_tests
        ;;
    -r|--report)
        run_report
        ;;
    *)
        run_tests
        run_report
        ;;
esac


 Source: http://adavis.info/